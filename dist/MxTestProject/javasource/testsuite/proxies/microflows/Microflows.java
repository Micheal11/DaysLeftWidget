// This file was generated by Mendix Modeler 6.10.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package testsuite.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the TestSuite module
	public static boolean aCO_Deadline_Date(IContext context, testsuite.proxies.Deadline _deadline)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Deadline", _deadline == null ? null : _deadline.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "TestSuite.ACO_Deadline_Date", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static testsuite.proxies.Deadline call_homepage(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "TestSuite.call_homepage", params);
			return result == null ? null : testsuite.proxies.Deadline.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean microflow(IContext context, testsuite.proxies.Deadline _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("person", _person == null ? null : _person.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "TestSuite.Microflow", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static testsuite.proxies.Deadline obj(IContext context, testsuite.proxies.Deadline _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("person", _person == null ? null : _person.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "TestSuite.obj", params);
			return result == null ? null : testsuite.proxies.Deadline.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}