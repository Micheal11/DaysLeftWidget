{
  "_args": [
    [
      {
        "raw": "https://github.com/FlockOfBirds/Mendix-client-typing",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "https://github.com/FlockOfBirds/Mendix-client-typing",
        "spec": "git+https://github.com/FlockOfBirds/Mendix-client-typing.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:FlockOfBirds/Mendix-client-typing.git",
          "sshUrl": "git+ssh://git@github.com/FlockOfBirds/Mendix-client-typing.git",
          "httpsUrl": "git+https://github.com/FlockOfBirds/Mendix-client-typing.git",
          "gitUrl": "git://github.com/FlockOfBirds/Mendix-client-typing.git",
          "shortcut": "github:FlockOfBirds/Mendix-client-typing",
          "directUrl": "https://raw.githubusercontent.com/FlockOfBirds/Mendix-client-typing/master/package.json"
        }
      },
      "C:\\Users\\MichealHProBook\\Desktop\\ReverseWidget2\\ReverseStringAssignment"
    ]
  ],
  "_from": "git+https://github.com/FlockOfBirds/Mendix-client-typing.git",
  "_id": "mendix-client@0.1.0",
  "_inCache": true,
  "_location": "/mendix-client",
  "_phantomChildren": {},
  "_requested": {
    "raw": "https://github.com/FlockOfBirds/Mendix-client-typing",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "https://github.com/FlockOfBirds/Mendix-client-typing",
    "spec": "git+https://github.com/FlockOfBirds/Mendix-client-typing.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:FlockOfBirds/Mendix-client-typing.git",
      "sshUrl": "git+ssh://git@github.com/FlockOfBirds/Mendix-client-typing.git",
      "httpsUrl": "git+https://github.com/FlockOfBirds/Mendix-client-typing.git",
      "gitUrl": "git://github.com/FlockOfBirds/Mendix-client-typing.git",
      "shortcut": "github:FlockOfBirds/Mendix-client-typing",
      "directUrl": "https://raw.githubusercontent.com/FlockOfBirds/Mendix-client-typing/master/package.json"
    }
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "git+https://github.com/FlockOfBirds/Mendix-client-typing.git#59e591a95582f42cd226d1634fc9d1d10d0bcf1b",
  "_shasum": "b98a1b119b0cc8a3927dde125bd9eb2e53b5f37c",
  "_shrinkwrap": null,
  "_spec": "https://github.com/FlockOfBirds/Mendix-client-typing",
  "_where": "C:\\Users\\MichealHProBook\\Desktop\\ReverseWidget2\\ReverseStringAssignment",
  "author": {
    "name": "Andries Smit",
    "email": "andries.smit@flockofbirds.org"
  },
  "dependencies": {
    "@types/big.js": "0.0.31",
    "@types/dojo": "^1.9.34",
    "big.js": "^3.1.3"
  },
  "description": "Type definition for Mendix client",
  "devDependencies": {},
  "gitHead": "59e591a95582f42cd226d1634fc9d1d10d0bcf1b",
  "name": "mendix-client",
  "optionalDependencies": {},
  "readme": "# Mendix Client API Type definition\r\n\r\nThis type definition is based on the Mendix client API documentation\r\n\r\nhttps://apidocs.mendix.com/6/client/\r\n\r\n## Installation\r\n * Install via NPM\r\n\r\n`npm install --save-dev https://github.com/FlockOfBirds/Mendix-client-typing`\r\n\r\n * Add to your tsconfig.json\r\n```json\r\n{\r\n    \"compilerOptions\": {\r\n        \"types\": [ \"mendix-client\" ]\r\n    }\r\n}\r\n```\r\n\r\n## Usage\r\nTypescript sample works as a Mendix Dojo widget\r\n\r\n```ts\r\nimport * as dojoDeclare from \"dojo/_base/declare\";\r\nimport * as WidgetBase from \"mxui/widget/_WidgetBase\";\r\n\r\nexport class MyWidget extends WidgetBase {\r\n    // Properties from Mendix modeler\r\n    private message: string; \r\n    // Don`t assign default values, as the constructor will never be executed\r\n    // private info: \"Hello World\"; \r\n    \r\n    postCreate() {\r\n        console.log(\"We have a widget \", this.message);\r\n    }\r\n\r\n    update(object: mendix.lib.MxObject, callback?: Function) {\r\n        console.log(\"We have a context\", object);\r\n\r\n        if (callback) {\r\n            callback();\r\n        }\r\n    }\r\n}\r\n\r\ndojoDeclare(\"com.mendix.widget.mywidget.MyWidget\", [ WidgetBase ], (function(Source: any) {\r\n    const result: any = {};\r\n    for (const i in Source.prototype) {\r\n        if (i !== \"constructor\" && Source.prototype.hasOwnProperty(i)) {\r\n            result[i] = Source.prototype[i];\r\n        }\r\n    }\r\n    return result;\r\n}(MyWidget)));\r\n```\r\nMore info about the Dojo declare hack for TypesScript: https://github.com/DefinitelyTyped/DefinitelyTyped/tree/types-2.0/dojo/README.md \r\n\r\n## Dependency\r\n * Mendix 6 Modeler - https://appstore.home.mendix.com\r\n",
  "readmeFilename": "README.md",
  "types": "index.d.ts",
  "version": "0.1.0"
}
